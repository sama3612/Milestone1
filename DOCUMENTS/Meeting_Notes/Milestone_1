2/12 OOAD Meeting:
Scenarios: 
-Which class will handle the placement of ships, validation/exposition? 
    -We’re putting the ships in the map, UI takes user input, probably in the form of an array, and will pass it off to the Map, which keeps track of ship locations and what’s been hit
We’ll have two maps for each player
    -Different types of ships: different classes for ship and weapons, different weapons and different ships that will interact with the map and driver classes
    -We’ll probably have an attribute that decides that
-How will we handle players and scores? 
    -Stored in Player_Info, passed between driver (who’s winning, whos losing) and would give info to UI to display
    -Driver will do a lot of our computation stuff
-Can you simulate an attack? Hit/miss? Ship sunk or not?
    -Driver decides who’s turn, updates both displays (UIs), one player makes attack, UI takes that input (coordinates or something), gives info back to driver, uses weapon class and gives that info to the Map class, which processes if it’s a hit or miss
    -If hit, ship status will be updated, returns info back to driver
    -Driver sees if all ships are sunk, updates player info, gives that back to the UI to update displays
    -Keeping track of ship health in the ship class
General Feedback/Recommendations 
  -When separating classes, make sure stuff is extensible
  -Any recs?
    -Don’t have an overflow of classes
    -Not too many divided responsibilities
Q & A :
-Milestone 2: will be more of a demonstration
